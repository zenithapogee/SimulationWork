compositor IRGCameraNoisePlugin
{
  technique
  {
    // Using a 16-bit temporary texture to simulate a camera sensor.
    texture rt target_width target_height PF_SHORT_RGB

    target rt
    {
      // Render output from previous compositor (or original scene)
      input previous
    }
    target_output
    {
      // Start with clear output
      input none

      // Draw a fullscreen quad with noise
      pass render_quad
      {
        material IRGCameraNoisePlugin
        input 0 rt
      }
    }
  }
}


compositor IRGCameraSim
{
  technique
  {
    // YOUR GRAPHICS CARD MUST SUPPORT frame buffer object (FBO) rendering to
    // PF_FLOAT32_RGB for this compositor to work correctly.
    // Inspect ~/.gazebo/ogre.log to see if you have the right support.

    // A floating-point texture to render the scene to. The shader will process
    // this texture as if it were light entering the camera.
    texture rt0 target_width target_height PF_FLOAT32_RGB

    target rt0
    {
      // Render output from previous compositor (or original scene)
      input previous
    }

    target_output
    {
      // Start with clear output
      input none

      // Draw a fullscreen quad modified as if it were the output of a digital camera
      pass render_quad
      {
        material IRGCameraSim
        input 0 rt0
      }
    }
  }
}

